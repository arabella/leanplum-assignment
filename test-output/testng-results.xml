<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="rondo-android" duration-ms="2423267" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T10:29:21Z">
    <groups>
      <group name="adhoc">
        <method signature="AdHocScreenTests.testStartCampaign(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="testStartCampaign" class="tests.AdHocScreenTests"/>
      </group> <!-- adhoc -->
    </groups>
    <test name="Alert" duration-ms="2423267" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T10:29:21Z">
      <class name="tests.AdHocScreenTests">
        <test-method status="PASS" signature="beforeAll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="beforeAll" is-config="true" duration-ms="11515" started-at="2022-03-01T09:48:46Z" finished-at="2022-03-01T09:48:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[753d52c2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mi11lite]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeAll -->
        <test-method status="FAIL" signature="testStartCampaign(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="testStartCampaign" duration-ms="156" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T09:48:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[753d52c2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4555]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mi11lite]]>
              </value>
            </param>
          </params>
          <exception class="java.util.MissingFormatArgumentException">
            <message>
              <![CDATA[Format specifier '%s']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.MissingFormatArgumentException: Format specifier '%s'
at java.util.Formatter.format(Formatter.java:2519)
at java.util.Formatter.format(Formatter.java:2455)
at java.lang.String.format(String.java:2940)
at core.LogResults.startTest(LogResults.java:47)
at tests.AdHocScreenTests.testStartCampaign(AdHocScreenTests.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.MissingFormatArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStartCampaign -->
        <test-method status="PASS" signature="initTestContext(java.lang.String, java.lang.reflect.Method)[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="initTestContext" is-config="true" duration-ms="0" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T09:48:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mi11lite]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.AdHocScreenTests.testStartCampaign(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestContext -->
        <test-method status="PASS" signature="printException(org.testng.ITestResult)[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="printException" is-config="true" duration-ms="1" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T09:48:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStartCampaign status=FAILURE method=AdHocScreenTests.testStartCampaign(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.AdHocScreenTests@2812cbfa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printException -->
        <test-method status="PASS" signature="afterAll()[pri:0, instance:tests.AdHocScreenTests@2812cbfa]" name="afterAll" is-config="true" duration-ms="2423089" started-at="2022-03-01T09:48:58Z" finished-at="2022-03-01T10:29:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAll -->
      </class> <!-- tests.AdHocScreenTests -->
    </test> <!-- Alert -->
  </suite> <!-- rondo-android -->
</testng-results>
